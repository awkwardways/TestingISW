@model PROYECTOISW.Models.ViewModel.PerfilViewModel.CambiarContraseñaViewModel
@{
    ViewData["Title"] = "Cambio Contraseña";
}

<div class="main-content">
    <h1>Cambiar Contraseña</h1>
    <form asp-action="CambiarContraseña" asp-controller="Usuario" method="post">
        <!--Obtener los valores de id y correo-->
        <input asp-for="Id" type="hidden" />
        <input asp-for="Correo" type="hidden" />

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mb-5">
            <label asp-for="Actual" class="form-label"></label>
            <input asp-for="Actual" type="password" class="form-control" placeholder="Ingresar Contraseña Actual" />
            <span asp-validation-for="Actual" class="text-danger"></span>
        </div>
        <div class="mb-5">
            <label asp-for="NuevaContraseña" class="form-label"></label>
            <input asp-for="NuevaContraseña" type="password" class="form-control" placeholder="Nueva contraseña" />
            <span asp-validation-for="NuevaContraseña" class="text-danger"></span>
        </div>
        <div class="mb-5">
            <label asp-for="ConfirmarContraseña" class="form-label"></label>
            <input asp-for="ConfirmarContraseña" type="password" class="form-control" placeholder="Confrmar Contraseña" />
            <span asp-validation-for="ConfirmarContraseña" class="text-danger"></span>
        </div>
        <div class="mb-5">
            <button type="submit" class="btn btn-success">Guardar Cambios</button>
        </div>
    </form>
    <!-- Mensaje de error -->
    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-danger mt-3" role="alert">
            @ViewBag.Error
        </div>
    }
    @if (!string.IsNullOrEmpty(ViewBag.Exito))
    {
        <div class="alert alert-success mt-3" role="alert">
            @ViewBag.Exito
        </div>
    }
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
